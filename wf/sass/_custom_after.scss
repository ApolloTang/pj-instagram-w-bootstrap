/* **********************************************************************
   _custom_after.scss  [BEGIN]
*********************************************************************** */

* {
    position: relative;     // set everything as position: relative so there are no surprises when using absolutely positioned elements.
    box-sizing: border-box; // border-box so that we can use percentage widths and not worry about any padding the element has influencing the layout.

}
body {
    color: $grey;
    font-size: $font-size;
}


header {
    max-height: 600px;
    height: 600px;
    overflow: hidden;
    img {

    // mobile first default [START] - - - - - - -

        // set the position of the img tag to fixed. This means the image will
        // stay in position when the user scrolls, thus creating a feeling of
        // depth (object at far horizon does not move when viewer moves).
        // The idea is that the content scrolls up over the image in the header

        position: fixed;   // fixed to view port, don't move when scroll
        width: 1200px;
        top: 0px;
        left: 50%;  // image's left edge start at center disregard of viewport size
        margin-left: -600px; // readjust to compensate left offset specified above

    // mobile first default [END] - - - - - - - -

        @media screen and (min-width: $screen-lg) {

            // on large window sizes make the image fill the browser
            // width and position it back in the top left corner.
            // Importantly, we must reset the margin so the image is not
            // pulled off to the left.

            top: auto;
            left: auto;
            margin: 0;
            width: 100%;
        }
    }
}


.name {
    font-size: 21px;
    position: absolute;
    top: 50px;
    left: 50px;
    color: $white;
}

.titles {
    position: absolute;
    bottom: 40%;
    width: 100%;
    text-align: center;

    @media screen and (min-width: $screen-lg) {

        //  titles element to push it up a little bit more on large screens
        bottom: 50%;

    }
}

h1, h2 {
    width: 100%;
    color: $white;
    margin: 0;
}

h1 {
    text-transform: uppercase;
    font-weight: 700;
    font-size: 36px;
    letter-spacing: 0.06em;
    margin-bottom: $margin;

    span {
        display: block;

        // On mobile we need it to be a block level element so it
        // stacks as in its own line by itself.
        // This is a better way to do line break

        @media screen and (min-width: $screen-md) {
            display: inline;
        }
    }
}

h2 {
    font-size: 16px;
    width: 70%;
    margin: 0 auto;

    @media screen and (min-width: $screen-lg) {
        width: 100%;
        margin: 0;
    }
}


.fancy-font {
    font-family: $fancy-font;
}


.social {
    position: absolute;
    top: 55px;
    right: 50px;
    overflow: hidden;

    a {
        float: left;
        width: 26px;
        height: 26px;
        margin: 0 5px;
        text-indent: -9999px;
        background: url(../images/social-sprite.png) no-repeat;
        opacity: 0.8;

        &:hover {
            opacity: 1.0;
        }

        @media screen and (-webkit-min-device-pixel-ratio: 2), screen and (-min-device-pixel-ratio: 2) {
            // For including high-res graphics, but only for
            // screens that can make use of them. "Retina" being "2x":
            // ref:: http://css-tricks.com/snippets/css/retina-display-media-query/
            background: url(../images/social-sprite@2x.png) no-repeat;
            background-size: 76px 26px;
            // no need to specify background-position !
        }

        &.facebook {
            background-position: 0px 0px;
        }

        &.twitter {
            background-position: -25px 0px;
        }

        &.instagram {
            background-position: -50px 0px;
        }
    }
}
/* **********************************************************************
   _custom_after.scss  [END]
*********************************************************************** */


